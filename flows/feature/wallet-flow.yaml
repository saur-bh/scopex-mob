# Wallet Flow - Post-Signup Feature Test
# Tests wallet functionality for authenticated users

appId: com.scopex.scopexmobilev2
name: "Wallet Flow"
tags: ["feature", "wallet", "balance", "authenticated", "post-signup", "critical"]

# Environment variables
env:
  TEST_START_TIME: "${Date.now()}"
  PLATFORM: "${maestro.platform}"

# Flow hooks for setup and cleanup
onFlowStart:
  - evalScript: "output.testStartTime = Date.now();"
  - evalScript: "output.stepCount = 0;"

onFlowComplete:
  - evalScript: "const duration = Date.now() - output.testStartTime;"
  - evalScript: "output.stepCount++;"
  - takeScreenshot: "wallet-flow-complete"

---
# Start screen recording
- startRecording:
    path: 'wallet-flow'
    label: 'Wallet Flow Recording'

# Step 1: Launch the app without state clearing (assumes user is signed up)
- launchApp:
    appId: "com.scopex.scopexmobilev2"
    clearState: false
    clearKeychain: false

# Step 2: Wait for app to load and verify authenticated state
- extendedWaitUntil:
    visible: "Send Money"
    timeout: 15000

# Step 3: Navigate to Wallet section
- tapOn: "Wallet"

# Step 4: Verify Wallet screen elements
- extendedWaitUntil:
    visible: "Wallet"
    timeout: 10000
- assertVisible: "Wallet"

# Step 5: Check wallet balance
- assertVisible: "Balance"

# Step 6: Navigate through wallet tabs
- tapOn: "Transactions"

- tapOn: "Cards"

- tapOn: "Settings"

# Step 7: Take screenshot of wallet
- takeScreenshot: "wallet-screen"

# Step 8: Verify wallet functionality
- assertVisible: "Wallet"

# Step 9: Final verification
- assertTrue: "maestro.appId === 'com.scopex.scopexmobilev2'"

# Stop recording
- stopRecording
