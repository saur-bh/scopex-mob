appId: com.scopex.scopexmobile
name: "Template Flow"
tags: ["feature", "template"]

env:
  TEST_START_TIME: "${Date.now()}"
  PLATFORM: "${maestro.platform}"
  MAX_RETRIES: "3"

onFlowStart:
  - evalScript: "console.log('Starting Template Flow'); output.testStartTime = Date.now(); output.stepCount = 0;"

onFlowComplete:
  - evalScript: "const durationMs = Date.now() - output.testStartTime; console.log(`Template Flow duration: ${durationMs}ms`);"
  - takeScreenshot: "template-flow-complete"

---
# Start screen recording
- startRecording:
    path: 'template-flow'
    label: 'Template Flow Recording'

# Step 1: Launch the app with state clearing
- launchApp:
    appId: "com.scopex.scopexmobile"
    clearState: true
    clearKeychain: true

# Step 2: Wait for app to load
- extendedWaitUntil:
    visible: "Continue"
    timeout: 15000

# Step 3: Navigate through onboarding
# Screen 1: Initial onboarding
- extendedWaitUntil:
    visible: "Continue"
    timeout: 10000

# Navigate to next screen
- tapOn: "Continue"

# Screen 2: Trusted by thousands
- extendedWaitUntil:
    visible: "Continue"
    timeout: 10000

# Navigate to next screen
- tapOn: "Continue"

# Screen 3: Designed for love
- extendedWaitUntil:
    visible: "Get Started"
    timeout: 10000

# Complete onboarding
- tapOn: "Get Started"

# Step 4: Handle signup flow
# Verify navigation to signup screen
- extendedWaitUntil:
    visible: "Sign.*"
    timeout: 10000
- extendedWaitUntil:
    visible: "Sign up to continue"
    timeout: 10000

# Tap on Sign up
- tapOn: "Sign up to continue"

# Verify email input screen
- extendedWaitUntil:
    visible: "Email"
    timeout: 10000

# Enter email
- tapOn: "Email"
- inputText: "${USER_EMAIL:-test@example.com}"

# Tap Next
- tapOn: "Continue"

# Handle OTP flow
- tapOn: "Login with code"

# Enter OTP
- tapOn:
    id: "otp-input-0"
- inputText: "0"
- tapOn:
    id: "otp-input-1"
- inputText: "0"
- tapOn:
    id: "otp-input-2"
- inputText: "0"
- tapOn:
    id: "otp-input-3"
- inputText: "0"
- tapOn:
    id: "otp-input-4"
- inputText: "0"
- tapOn:
    id: "otp-input-5"
- inputText: "0"

# Complete OTP verification
- tapOn: "Verify"
- tapOn: "Verify"


# Step 5: Verify successful signup
- extendedWaitUntil:
    visible: "Send Money"
    timeout: 15000

# Step 6: Your specific test steps here (REPLACE WITH RECORDED COMMANDS)
- evalScript: "console.log('Step 6: Placeholder for recorded commands');"

# Step 7: Verify expected results
- evalScript: "console.log('Step 7: Add your assertions here');"

# Step 8: Take screenshot
- evalScript: "console.log('Step 8: Taking screenshot...');"
- takeScreenshot: "template-flow-complete"

# Step 9: Final verification
- evalScript: "console.log('Step 9: Final verification...');"
- assertTrue: "maestro.appId === 'com.scopex.scopexmobile'"
- evalScript: "console.log('Template flow completed successfully!');"

# Stop recording
- evalScript: "console.log('Recording completed - Template Flow finished');"
- stopRecording

# ============================================================================
# INSTRUCTIONS FOR RECORDING TEST STEPS:
# ============================================================================
# 1. Start Maestro Studio:
#    maestro studio
#
# 2. Record your test actions:
#    - Navigate through your app
#    - Perform the actions you want to test
#    - Maestro will generate the commands
#
# 3. Copy the generated commands and replace the placeholder steps above
#    - Look for the TODO comments
#    - Replace with your recorded commands
#
# 4. Test your flow:
#    ./run-tests.sh flows/feature/template-flow.yaml
# ============================================================================
