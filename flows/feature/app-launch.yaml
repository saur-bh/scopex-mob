# App Launch Test - Enhanced with Advanced Maestro Features
# Smoke test for basic app functionality

appId: com.scopex.scopexmobilev2
name: "App Launch Test"
tags: ["smoke", "launch", "critical"]

# Environment variables
env:
  TEST_START_TIME: "${Date.now()}"
  PLATFORM: "${maestro.platform}"

# Flow hooks for setup and cleanup
onFlowStart:
  - evalScript: "console.log('ðŸš€ Starting App Launch Test on ' + maestro.platform);"
  - evalScript: "output.testStartTime = Date.now();"

onFlowComplete:
  - evalScript: "const duration = Date.now() - output.testStartTime; console.log('âœ… App Launch Test completed in ' + duration + 'ms');"
  - takeScreenshot: "app-launch-complete"

---
# Start screen recording
- startRecording:
    path: 'app-launch-test'
    label: 'App Launch Test Recording'

# Step 1: Launch the app with state clearing
- evalScript: "console.log('Step 1: Launching app with state clearing...');"
- launchApp:
    appId: "com.scopex.scopexmobilev2"
    clearState: true
    clearKeychain: true

# Step 2: Wait for app to load and verify initial screen
- evalScript: "console.log('Step 2: Waiting for app to load...');"
- extendedWaitUntil:
    visible: "Continue"
    timeout: 15000
- evalScript: "console.log('App loaded successfully - Continue button visible');"

# Step 2.1: Verify onboarding elements are present
- evalScript: "console.log('Step 2.1: Verifying onboarding elements...');"
- assertVisible: "25 Paisa better than google rates"
- assertVisible: "â‚¬10 Reward on first transaction"
- evalScript: "console.log('Onboarding elements verified successfully');"

# Step 3: Take initial screenshot
- evalScript: "console.log('Step 3: Taking initial screenshot...');"
- takeScreenshot: "app-launched"

# Step 4: Verify app is ready for interaction
- evalScript: "console.log('Step 4: Verifying app is ready for interaction...');"
- assertTrue: "maestro.appId === 'com.scopex.scopexmobilev2'"

# Step 5: Extract and log element text for verification
- evalScript: "console.log('Step 5: Extracting element text...');"
- copyTextFrom: "Continue"
- evalScript: "console.log('Continue button text: ' + output.text);"

# Step 6: Verify app state
- evalScript: "console.log('Step 6: Verifying app state...');"
- assertVisible: "Continue"
- assertNotVisible: "Error"

# Stop recording
- evalScript: "console.log('Recording completed - App launch test finished');"
- stopRecording
