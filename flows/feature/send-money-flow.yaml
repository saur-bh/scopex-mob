# Send Money Flow - Post-Signup Feature Test
# Tests money transfer functionality for authenticated users

appId: com.scopex.scopexmobilev2
name: "Send Money Flow"
tags: ["feature", "send-money", "transfer", "authenticated", "post-signup", "critical"]

# Environment variables
env:
  TEST_START_TIME: "${Date.now()}"
  PLATFORM: "${maestro.platform}"
  RECIPIENT_EMAIL: "test@example.com"
  AMOUNT: "10"

# Flow hooks for setup and cleanup
onFlowStart:
  - evalScript: "output.testStartTime = Date.now();"
  - evalScript: "output.stepCount = 0;"

onFlowComplete:
  - evalScript: "const duration = Date.now() - output.testStartTime;"
  - evalScript: "output.stepCount++;"
  - takeScreenshot: "send-money-flow-complete"

---
# Start screen recording
- startRecording:
    path: 'send-money-flow'
    label: 'Send Money Flow Recording'

# Step 1: Launch the app without state clearing (assumes user is signed up)
- launchApp:
    appId: "com.scopex.scopexmobilev2"
    clearState: false
    clearKeychain: false

# Step 2: Wait for app to load and verify authenticated state
- extendedWaitUntil:
    visible: "Send Money"
    timeout: 15000

# Step 3: Navigate to Send Money section
- tapOn: "Send Money"

# Step 4: Verify Send Money screen elements
- extendedWaitUntil:
    visible: "Send Money"
    timeout: 10000
- assertVisible: "Send Money"

# Step 5: Enter recipient details
- tapOn: "Email"
- inputText: "test@example.com"

# Step 6: Enter amount
- tapOn: "Amount"
- inputText: "10"

# Step 7: Take screenshot before proceeding
- takeScreenshot: "send-money-details-entered"

# Step 8: Verify transfer details
- assertVisible: "test@example.com"
- assertVisible: "10"

# Step 9: Final verification
- assertTrue: "maestro.appId === 'com.scopex.scopexmobilev2'"

# Stop recording
- stopRecording
