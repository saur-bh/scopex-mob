# Guest User Flow - Enhanced with Hooks and Permissions
# Works for both Android and iOS with proper data clearing

appId: com.scopex.scopexmobilev2
name: "Guest User Journey"
tags: ["guest", "onboarding", "smoke"]

# Environment variables for dynamic content
env:
  TEST_START_TIME: ${Date.now()}
  PLATFORM: ${maestro.platform}

# Flow hooks for setup and cleanup
onFlowStart:
  - runFlow: setup/clear-app-data.yaml
  - evalScript: ${output.flowStartTime = Date.now(); console.log('Flow started at:', output.flowStartTime);}

onFlowComplete:
  - runFlow: cleanup/cleanup-data.yaml
  - evalScript: ${const duration = Date.now() - output.flowStartTime; console.log('Flow completed in', duration, 'ms');}
  - takeScreenshot: "guest-user-flow-complete"

# Main guest user journey
---
- launchApp:
    permissions:
      all: deny
      camera: allow
      location: allow
      notifications: allow
      contacts: allow
      microphone: allow

# Start recording the test execution
---
- startRecording

# Handle platform-specific permission dialogs
---
- runFlow:
    when:
      platform: android
    file: permissions/android-permissions.yaml

- runFlow:
    when:
      platform: ios
    file: permissions/ios-permissions.yaml

# Navigate through onboarding with dynamic logging
---
- evalScript: ${console.log('Starting onboarding flow on', maestro.platform);}
- tapOn: "Continue"
- assertVisible: "Trusted by thousands"
- assertVisible: "Built by one of us"

- tapOn: "Continue"
- assertVisible: "‚Ç¨10 Reward on first transaction"

- tapOn: "Get Started"
- tapOn: "Sign up to continue"

# Verify welcome screen
---
- assertVisible: "Welcome to ScopeX"
- evalScript: ${console.log('Successfully reached welcome screen');}

# Navigate through main tabs with enhanced assertions
---
- tapOn: "üè†"  # Home tab
- tapOn: "Compare"
- tapOn: "‚öôÔ∏è"  # Settings tab

# Verify main navigation elements
---
- assertVisible: "Help"
- assertVisible: "Settings"
- assertVisible: "Transfers"
- assertVisible: "Wallet"
- assertVisible: "Home"
- assertVisible: "Sign up to continue"

# Test tab navigation with platform-specific logging
---
- evalScript: ${console.log('Testing tab navigation on', maestro.platform);}
- tapOn: "Home"
- tapOn: "Transfers"
- assertVisible: "Transfers"
- assertVisible: "Wallet Transactions"
- assertVisible: "Sign Up"

- tapOn: "Settings"
- assertVisible: "Notifications"

- tapOn: "Wallet"
- assertVisible: "Sign Up & Verify to Claim ‚Ç¨10"

- tapOn: "Home"

# Test amount input functionality
---
- evalScript: ${console.log('Testing amount input functionality');}
- tapOn: "100"
- inputText: "500"
- hideKeyboard

# Verify amount was entered correctly
---
- assertVisible: "500"
- evalScript: ${console.log('Amount input test completed successfully');}

# Stop recording and take final screenshot
---
- stopRecording
- takeScreenshot: "guest-user-journey-complete"
- evalScript: ${console.log('Guest user journey completed successfully!'); output.completionStatus = 'SUCCESS';}
